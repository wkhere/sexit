important
=========

- plugin: when can't find binary it doesn't show any error and reads empty string 
  which is passed to editor, causing disappearance of the text in region
+ translate parse tree to ruby
+ stdin/stdout runner
+ handle multilines and guess lines layout
+ accept multilines as well as expressions from the middle of the line
+ trim ending whitespaces before parsing
+ Sublime2 plugin
+ insanely simple error handling when there's no sex (does not parse)
+ @-string literals
+ string literals consisting of a number
+ letters at the end of num literals
+ bool literals YES NO
- enhanced bool literals @TRUE @FALSE
- @'Z' literals
- boxing expressions @(expr)
- container exprs:
  - array @[e1,e2]
  - dict @{ @"k1": e1, @"k2": e2 }
- array subscripts
- enums
- ignore var decls
+ simple var type decls in assign statements
- string literals having \" inside
+ ignore casts in values
- code blocks
- keep original number of newlines at the end
- keep original indentation and put all output lines with it
+ normal function calls
- flow control
  - if
  - switch - maybe
  -- for - no, better use ruby iteration
- comments
- ifdefs
- super exception
+ NULL -> nil
- less nondeterminism
- BUG with exp.attr
- potential BUG with decision on exp vs code_block when input contains doublequoted doublequote
- op++ op-- only as statements
~ @selector(..) syntax
  - give me the cases Royal:
    + action:@selector(fire:)  --> action:"fire"
    what about other arities?

less prio
=========

- tests in separate file (load_test_files/1, use_module/1? ..etc)
- save original lines layout
- idents as atoms
- translate to "iolist" and write properly at the postprocessing

rejected
========
- continuous i/o runner - doesn't buy us anything
